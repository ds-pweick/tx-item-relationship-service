name: Update docs for IRS release

env:
  IRS_APPLICATION_PATH: 'irs-api/src/main/java/org/eclipse/tractusx/irs/IrsApplication.java'
  TOP_LEVEL_CHANGELOG_PATH: 'CHANGELOG.md'
  IRS_OPENAPI_SPEC_PATH: 'docs/src/api/irs-api.yaml'
  IRS_HELM_CHANGELOG_PATH: 'charts/item-relationship-service/CHANGELOG.md'
  SEMVER_PATTERN: '[0-9]+\.[0-9]+\.[0-9]+'
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      irs-version:
        description: 'New IRS version'
        required: true
        type: string
      helm-chart-version:
        description: 'New Helm Chart version'
        required: true
        type: string
      add-change-to-helm-changelog:
        description: 'Add "Update IRS to ..." change to Helm Chart changelog'
        required: true
        type: boolean

jobs:
  update-docs-for-release:
    runs-on: ubuntu-latest
    outputs:
      previous-irs-version: ${{ steps.update-docs.outputs.previous-irs-version }}

    steps:
      - uses: actions/checkout@v4

      - name: Validate that workflow inputs are SemVer strings
        run: |
          matched_irs_semver_string=$(echo "${{ inputs.irs-version }}" | grep -Ex "${{ env.SEMVER_PATTERN }}" || echo "")
          matched_helm_chart_semver_string=$(echo "${{ inputs.helm-chart-version }}" | grep -Ex "${{ env.SEMVER_PATTERN }}" || echo "")
          if [[ -z "$matched_irs_semver_string"  || -z "$matched_helm_chart_semver_string" ]]; then
              exit 1
          fi
        continue-on-error: false

      - name: Validate that IRS and Helm Chart versions don't exist yet
        run: |
          # IRS version can be checked via git tag since every release has a tag
          matched_irs_version=$(git tag | grep -Eo "${{ inputs.irs-version }}" || echo "")
          # extract from Helm Chart changelog
          matched_helm_chart_version=$(grep -Eo "## \[${{ inputs.helm-chart-version }}\]" ${{ env.IRS_HELM_CHANGELOG_PATH }} || echo "")
          
          if [[ -n "$matched_irs_version" || -n "$matched_helm_chart_version" ]]; then
              echo "IRS or Helm Chart release version already exists, aborting..."
              exit 1
          fi
        continue-on-error: false

      - name: Update top level changelog, IRS Helm changelog, Helm repository's yaml file and IrsApplication.java
        id: update-docs
        run: |
          new_irs_version="${{ inputs.irs-version }}"
          new_helm_chart_version="${{ inputs.helm-chart-version }}"
          add_change_to_helm_changelog="${{ inputs.add-change-to-helm-changelog }}"
          
          date=$(date +"%Y-%m-%d")
          
          semver_pattern="${{ env.SEMVER_PATTERN }}"
          semver_pattern_sed="[0-9]\+\.[0-9]\+\.[0-9]\+"      
          
          ### update CHANGELOG.md ###
          # get line number of uppermost comparison url ("[Unreleased]: https://github.com/.../version...HEAD")
          latest_comparison_url_line_number=$(cat -n ${{ env.TOP_LEVEL_CHANGELOG_PATH }} | grep -Eoi "[0-9]+.\[Unreleased\]" | grep -Eo "[0-9]+")
          
          # previous version can be extracted from line below uppermost comparison
          previous_irs_version=$(awk "NR==$((latest_comparison_url_line_number+1))" ${{ env.TOP_LEVEL_CHANGELOG_PATH }} | grep -Eo "\[$semver_pattern\]" | tr -d "[]")
          echo "previous-irs-version=$previous_irs_version" >> "$GITHUB_OUTPUT"
          
          # correct uppermost comparison
          sed -i "$latest_comparison_url_line_number s|$semver_pattern_sed\.\.\.HEAD|$new_irs_version...HEAD|" ${{ env.TOP_LEVEL_CHANGELOG_PATH }}         
          
          # insert new comparison below uppermost one
          sed -i "$((latest_comparison_url_line_number+1)) s|^|[$new_irs_version]: https://github.com/eclipse-tractusx/item-relationship-service/compare/$previous_irs_version...$new_irs_version\n|" ${{ env.TOP_LEVEL_CHANGELOG_PATH }}        
          
          # replace placeholder
          top_lvl_changelog_placeholder_line_number=$(cat -n ${{ env.TOP_LEVEL_CHANGELOG_PATH }} | grep -Eoi "[0-9]+.## \[Unreleased\]" | grep -Eo "[0-9]+")
          sed -i "$((top_lvl_changelog_placeholder_line_number+1)) s|^|\n## [$new_irs_version] - $date\n|" ${{ env.TOP_LEVEL_CHANGELOG_PATH }}
          
          ### update Helm Chart directory's CHANGELOG.md ###
          irs_helm_changelog_placeholder_line_number=$(cat -n ${{ env.IRS_HELM_CHANGELOG_PATH }} | grep -Eoi "[0-9]+.## \[Unreleased\]" | grep -Eo "[0-9]+")
          
          if [[ "$add_change_to_helm_changelog" == "true" ]]; then
            # get line number of first header which is not placeholder
            next_header_line_number=$(cat -n ${{ env.IRS_HELM_CHANGELOG_PATH }} | grep -Eo -m 1 "[0-9]+.## \[$semver_pattern\]" | grep -Eo "^[0-9]+")
            
            # get line number of first  "### Changed" section
            first_changed_section_line_number=$(cat -n ${{ env.IRS_HELM_CHANGELOG_PATH }} | grep -Eo -m 1 "[0-9]+.### Changed" | grep -Eo "[0-9]+")
            
            # "### Changed" is already present for current changelog if it comes before next header -> just insert line below
            if [[ $first_changed_section_line_number -lt $next_header_line_number ]]; then
            
              # check if markdown was properly formatted (with blank line between "### Changed" and first change)
              line_after=$(awk "NR==$((first_changed_section_line_number+1))" ${{ env.IRS_HELM_CHANGELOG_PATH }})
              if [[ "$line_after" == "" ]]; then
                sed -i "$((first_changed_section_line_number+1)) s|^|\n- Update IRS version to $new_irs_version|" ${{ env.IRS_HELM_CHANGELOG_PATH }}
              else # format properly with blank line
                sed -i "$((first_changed_section_line_number+1)) s|^|\n- Update IRS version to $new_irs_version\n|" ${{ env.IRS_HELM_CHANGELOG_PATH }}
              fi
            
            else
              sed -i "$(($irs_helm_changelog_placeholder_line_number+1)) s|^|\n### Changed\n\n- Update IRS version to $new_irs_version\n|" ${{ env.IRS_HELM_CHANGELOG_PATH }}
            fi
          fi
          
          # replace placeholder
          irs_helm_changelog_placeholder_line_number=$(cat -n ${{ env.IRS_HELM_CHANGELOG_PATH }} | grep -Eoi "[0-9]+.## \[Unreleased\]" | grep -Eo "[0-9]+")
          sed -i "$((irs_helm_changelog_placeholder_line_number+1)) s|^|\n## [$new_helm_chart_version] - $date\n|" ${{ env.IRS_HELM_CHANGELOG_PATH }}
          
          ### update irs-api.yaml ###
          irs_openapi_spec_irs_version_line_number=$(cat -n ${{ env.IRS_OPENAPI_SPEC_PATH }} | grep -Eo -m 1 "[0-9]+.+version: $semver_pattern" | grep -Eo "^[0-9]+")
          sed -i "$irs_openapi_spec_irs_version_line_number s|$semver_pattern_sed|$new_irs_version|" ${{ env.IRS_OPENAPI_SPEC_PATH }}  
          
          ### update IrsApplication.java ###
          sed -i "s|API_VERSION = \"$semver_pattern_sed\"|API_VERSION = \"$new_irs_version\"|" ${{ env.IRS_APPLICATION_PATH }}

      - name: Create pull request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: 'chore(docs): Update docs for release ${{ inputs.irs-version }}'
          branch: chore/update-docs-for-irs-release-${{ inputs.irs-version }}
          base: test-release-workflow
          delete-branch: true
          title: Updated docs for next release
          body: This PR prepares the docs for IRS release version ${{ inputs.irs-version }}.
            Please check whether the docs were updated correctly. Once this PR is merged, the release process will continue automatically.

      - name: Wait for pull request merge
        run: |
          pull_request_number=${{ steps.cpr.outputs.pull-request-number }}
          pull_request_merged="False"
          seconds_waited_for_merge=0
          # set duration between api requests
          sleep_interval_length=30 # seconds
          timeout_in_minutes=10
          
          while [[ "$pull_request_merged" == "False" ]]
          do
            # give some time to merge pull request
            sleep "$sleep_interval_length"s
          
            # retrieve pr status using GH API's pull requests endpoint with GH CLI
            pr_status=$(gh pr view $pull_request_number --json state --jq ".state")
          
            case $pr_status in
          
              MERGED)
                pull_request_merged="True"
                ;;
          
              OPEN)
                seconds_waited_for_merge=$((seconds_waited_for_merge+sleep_interval_length))
                # abort workflow when having waited for more than specified time
                if [[ $seconds_waited_for_merge -gt $((timeout_in_minutes*60)) ]]; then
                  exit 1
                fi
                ;;
          
              CLOSED)
                exit 1
                ;;
          
            esac
          
          done
        continue-on-error: false

      - name: Create and push new Git tag for release
        run: git tag ${{ inputs.irs-version }} && git push origin ${{ inputs.irs-version }}

  call-release-workflow:
    needs:
      - update-docs-for-release
    uses: ./.github/workflows/release.yaml
    with:
      new-irs-version: ${{ inputs.irs-version }}
      previous-irs-version: ${{ needs.update-docs-for-release.outputs.previous-irs-version }}
      helm-chart-version: ${{ inputs.helm-chart-version }}
